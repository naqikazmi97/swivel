name: Swivel IAC & Image Build Workflow

on:
    
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  issues: write

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: my-app
  IMAGE_TAG: latest

jobs:
  terraform-deploy:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}

      - name: install terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.0"

      - name: Terrafrom plan
        working-directory: terraform
        run: |
          terraform init
          terraform plan -out=tfplan
      
      - name: Wait for approval
        uses: trstringer/manual-approval@v1
        with:
          timeout-minutes: 60
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: "naqikazmi97"
          minimum-approvals: 1

      - name: Terraform Apply (Manual Approval Required)
        working-directory: terraform
        run:  |
          terraform apply tfplan

  # build-and-push:
  #   name: Build and Push Docker Image
  #   runs-on: ubuntu-latest
  #   needs: terraform-deploy

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v4
  #       with:
  #         role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
  #         aws-region: ${{ env.AWS_REGION }}

  #     - name: Login to Amazon ECR
  #       id: login-ecr
  #       uses: aws-actions/amazon-ecr-login@v2

  #     - name: Build Docker image
  #       run: |
  #         docker build -t ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .
  #         docker tag ${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} \
  #           ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

  #     - name: Push Docker image to ECR
  #       run: |
  #         docker push ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

