name: Swivel Image Build Workflow

on:
    
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  issues: write

env:
  AWS_REGION: us-east-1
  ECR_REPOSITORY: swivel-dev-app
  IMAGE_TAG: latest
  ACCOUNT_ID: 719037119533
  IDENTIFIER: swivel
  ENV: dev

jobs:
  build-and-push:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build Docker image
        run: |
          docker build -t ${{ env.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }} .

      - name: Push Docker image to ECR
        run: |
          docker push ${{ env.ACCOUNT_ID }}.dkr.ecr.us-east-1.amazonaws.com/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: Force deploy ECS Service
        run: |
          SERVICE_NAME=$(aws ecs list-services --cluster $IDENTIFIER-$ENV-cluster --region $AWS_REGION --query "serviceArns[?contains(@, '$IDENTIFIER-$ENV-service')]" --output text | awk -F'/' '{print $NF}')
          aws ecs update-service --cluster $IDENTIFIER-$ENV-cluster --service $SERVICE_NAME --force-new-deployment --region $AWS_REGION
